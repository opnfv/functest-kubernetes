---
sudo: required
language: generic
services: docker
dist: xenial
addons:
  apt:
    packages:
      - libssl1.0.0

before_script:
  - sudo add-apt-repository -y ppa:deadsnakes/ppa
  - sudo apt-get update
  - sudo apt-get install python3.7 python3.7-dev
  - sudo pip install tox
  - sudo -E docker login -u="${DOCKER_USERNAME}" -p="${DOCKER_PASSWORD}"
  - (cd .. && git clone https://github.com/estesp/manifest-tool)
  - (cd ../manifest-tool && git checkout v0.9.0)
  - (cd ../manifest-tool && sudo -E make && sudo -E make install)

jobs:
  include:
    - stage: run unit tests
      script: tox -e pep8,pylint,yamllint,ansiblelint,bashate,py27,py37
    - stage: build functest-kubernetes-core image
      script: sudo -E bash build.sh
      env:
        - REPO="${DOCKER_USERNAME}"
        - amd64_dirs="docker/core"
        - arm64_dirs=""
    - stage: publish functest-kubernetes-core manifests
      script: >
        sudo manifest-tool push from-args \
          --platforms linux/amd64 \
          --template ${DOCKER_USERNAME}/functest-kubernetes-core:ARCH-latest \
          --target ${DOCKER_USERNAME}/functest-kubernetes-core:latest
    - stage: build functest-kubernetes-[healthcheck,features] image
      script: sudo -E bash build.sh
      env:
        - REPO="${DOCKER_USERNAME}"
        - amd64_dirs="docker/healthcheck"
        - arm64_dirs=""
    - script: sudo -E bash build.sh
      env:
        - REPO="${DOCKER_USERNAME}"
        - amd64_dirs="docker/features"
        - arm64_dirs=""
    - stage: publish functest-kubernetes-[healthcheck,features] manifests
      script: >
        sudo manifest-tool push from-args \
          --platforms linux/amd64 \
          --template \
          ${DOCKER_USERNAME}/functest-kubernetes-healthcheck:ARCH-latest \
          --target ${DOCKER_USERNAME}/functest-kubernetes-healthcheck:latest
    - script: >
        sudo manifest-tool push from-args \
          --platforms linux/amd64 \
          --template \
          ${DOCKER_USERNAME}/functest-kubernetes-features:ARCH-latest \
          --target ${DOCKER_USERNAME}/functest-kubernetes-features:latest
    - stage: build functest-kubernetes-smoke image
      script: sudo -E bash build.sh
      env:
        - REPO="${DOCKER_USERNAME}"
        - amd64_dirs="docker/smoke"
        - arm64_dirs=""
    - stage: publish functest-kubernetes-smoke manifests
      script: >
        sudo manifest-tool push from-args \
          --platforms linux/amd64 \
          --template ${DOCKER_USERNAME}/functest-kubernetes-smoke:ARCH-latest \
          --target ${DOCKER_USERNAME}/functest-kubernetes-smoke:latest
